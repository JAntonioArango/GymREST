services:
  db:
    build: ./mysql
    ports:
      - "3306:3306"

    # ← picks up MYSQL_… from .env
    environment:
      - SPRING_DATASOURCE_URL
      - SPRING_DATASOURCE_USERNAME
      - SPRING_DATASOURCE_PASSWORD
      - SPRING_JPA_HIBERNATE_DDL_AUTO
      - SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_SCHEMA
    volumes:
      - db-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL
      - SPRING_DATASOURCE_USERNAME
      - SPRING_DATASOURCE_PASSWORD
      - SERVER_PORT=8080

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
      # by default SonarQube will spin up its embedded PostgreSQL
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/api/system/health" ]
      interval: 10s
      retries: 10

volumes:
  db-data:
  sonarqube_data:
  sonarqube_extensions:
